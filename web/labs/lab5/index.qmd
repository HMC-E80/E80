---
title: "Lab 5: Underwater Acoustics and Fourier Analysis"
number-sections: true
---

Team size: 4

Submission Sheet: [html](/labs/lab5/submission.qmd) [Word](/labs/lab5/submission.docx)

Prelab Help Sheet: None for this lab, but you've got this!  Review previous ones for ideas of how to prepare.

## Introduction

In this lab you will work as a team of four to use acoustic measurements to find the position of your robot in the test tank.  The acoustic measurements will depend on listening to beacons at fixed locations in the tank, and guessing your position relative to them.  Because there will be many beacon signals in the tank at once, you will need to use Fourier analysis to understand the behavior of the signals. The purpose of this lab is to demonstrate the power of underwater acoustic measurements and to force you to wrangle early and often with Fourier analysis.

After successful completion of this lab, you will be able to: 

- [ ] Use the FFT feature on the oscilloscope to interpret frequency domain signals.
- [ ] Comment on how the FFT of a signal changes when signal frequency, sampling rate and total sampling time are changed.
- [ ] Build a circuit interface to an electret microphone.
- [ ] Use the gain-bandwidth product of an op-amp to predict the achievable maximum gain.
- [ ] Describe the effect of multipath on the amplitudes of acoustic measurements.

This is a rotation lab, so not all teams will be working on this lab in the same week.  Odd numbered teams (11, 23, 35, etc.) will do this lab in week 6, while Even numbered teams (12, 24, 36, etc.) work on [lab 6](/labs/lab6/index.qmd).  Even numbered teams  will do this lab in week 7, while Odd numbered teams work on lab 6.  Be sure to watch the correct videos, do the correct quiz, and put in prelab effort for the correct lab!

## Introduction to the FFT

The oscilloscope ( [Agilent/Keysight 2024A](http://literature.cdn.keysight.com/litweb/pdf/75015-97045.pdf), [spec sheet](http://literature.cdn.keysight.com/litweb/pdf/5990-6618EN.pdf) ) has a feature that allows it to display a live FFT of a signal on one of the channels.  In this section we're going to use that feature to study the basic behavior of the FFT and to examine the effect of windowing on real world data.  **The whole team should participate in this section, at minimum by watching.**  Much of this section can be predicted and analyzed very accurately in prelab with sample data generated in MATLAB.

The following signals are used in this section:

1. 11 kHz sine wave, amplitude 1.5 V, offset 0 V.
2. 12 kHz sine wave, amplitude 1.5 V, offset 0 V.
3. 11 kHz square wave, amplitude 1.5 V, offset 0 V.

Do the following:

1. Connect a function generator to an input channel of the oscilloscope. 
2. Double check that your oscilloscope channel is DC coupled and using an appropriate 1x/10x setting.
3. Drive signal 1 into the oscilloscope
4. Set the time scale of the oscilloscope so that 50 cycles of the signal fit on the screen. 
5. Use the math function of the oscilloscope to display the FFT of the signal. Set the span of the FFT to 100 kHz, the center to 50 kHz, and the window to rectangular. 
6. Capture an oscilloscope trace for the current signal, and for each of the signals below. 
    1. Signal 2 
    2. Signal 3 
    3. Signal 3 with the the "window" setting changed from rectangular to Hanning.
    4. Signal 3 with the time scale changed to shrink the horizontal time axis.
7. Capture some oscilloscope data and take an FFT of it using Matlab, then compare that FFT to the scope FFTs.  Do so by following these steps.
    1. Turn off the FFT function on the scope 
    2. Drive signal 3 into the oscilloscope and make sure that you are using the original x-axis scaling, not the shrink described in instruction 6.4.
    3. Ensure the "max length" setting is selected on the "save" menu and save the waveform 
    5. Take the FFT of that data in Matlab with a rectangular window 
    6. Take the FFT of that data in Matlab with a Hanning window   
    7. Contrast the Matlab FFT against the scope FFT from instructions 6.2 and 6.3.


## Circuit Interfaces to Microphones {#sec-interface}

You will need to use microphones to pick up sounds in the tank. We will be using a waterproof electret microphone called the [CME-1538-100LB](http://www.cui.com/product/resource/cme-1538-100lb.pdf). 

1. Build the reference circuit from the datasheet for your electret microphone.
2. Verify that you can receive signals with your electret microphone by clapping near it.  You will need to set your scope to "Single" mode to capture your clap.
3. Use the FFT functions to identify the frequencies in your hand clap signal.

The electret microphone output is small (generally 10s of mV depending on the sound) and zero centered, so you will need to amplify the tank signals to see them your oscilloscope.  Designing an amplifier is trickier than you'd expect because of an op-amp parameter called the [Gain-Bandwidth product](https://en.wikipedia.org/wiki/Gain%E2%80%93bandwidth_product).

1. Build an amplifier with a gain of 100 by cascading two stages that each have a gain of 10.  Use dual-rail op-amps (like the TL081 or OP07).
2. Calculate the bandwidth you expect out of each op-amp stage using the gain-bandwidth product of your op-amps.
3. Test your amplifier using appropriate signals from the function generator.
4. Record your test results and your amplifier schematic in the submission sheet.

:::{.callout-note collapse="true"}
## Capacitive Coupling

The reference circuit's output is AC coupled, which means a capacitor is attached in series with the output.  The capacitive coupling is why the microphone output is zero-centered.  One way to understand the function of the coupling capacitor is by considering equivalent circuit models. The AC coupling capacitor and the loading from the oscilloscope combine to form a high pass filter. (Consider drawing a full circuit model to see that this is true.) This high pass filter DC signals while allowing high frequency signals to pass.  Because DC has to be zero Volts at the filter output, the output signal has to be zero centered.
:::

:::{.callout-note collapse="true"}
## Phantom Power

The electret microphone only has two ports -- they are listed as Term 1 and Term 2 in the reference circuit -- but those ports have to achieve three functions: provide a ground reference, provide power, and provide output signal.  Term 2 is used for ground, which is pretty normal.  However, Term 1 is used for both power and output signal.  Delivering power on the signal line is called "Phantom Power" in more sophisticated audio systems, and it works because power is delivered at DC while the audio signal resides at higher frequencies.
:::

:::{.callout-note collapse="true"}
## Other Amplifier Tips

You need to use dual-rail op-amps for this design because your input signal (the microphone output) is zero centered and your gain is high.  It's possible to build a pair of offset amplifiers that provide a gain of 100 and appropriate offsets, but dual rail op-amps simplify your design.

If your first amplifier stage is a non-inverting amplifier, then add a large resistor (~100k) between the positive amplifier input and ground. This resistor is necessary to prevent the input leakage current of your op-amp from changing your results.  You don't need this resistor if your first stage is an inverting amplifier.

You may need to solder leads to this electret microphone to plug it into your breadboard. You should consider twisting the leads together to form twisted pair wire. These wires do not need to be very long. In the tank room, you will be provided with water-proofed microphones with long leads so that you can dip the microphones into the tank while your circuits remain on the work tables.  
:::


## Distance Measurement Based On Amplitude

One way to locate your robot in the water is to listen to three acoustic beacons and calculate your distance to each of them based on the beacon power received at your robot. Three beacons are installed in the test tank and will be constantly emitting sine waves of approximately 9 kHz, 11 kHz and 13 kHz, and that setup is pictured in @fig-tank.   You will need to use the microphones in the tank room, which have long wires, to put a microphone into the tank and measure the signals coming out of these beacons.  Analyzing microphone data with the FFT will be essential because the signals of all of the beacons are present in the tank at the same time.

![Test tank with beacons and long microphones](img/tank_room_with_beacons.jpg){#fig-tank}

Prepare for your experiment by making models of what you expect to see

1. Find an analytical expression that describes power at a distance from an acoustic emitter.
2. Your measurements in the tank will be FFT magnitudes of Voltages received at your microphone.  Convert your analytical expression from describing received power to describing your expected FFT magnitude.
3. You won't have all the parameters for your analytical function (TX power, P-to-V conversion), but you can fit your model to your measured data anyway.  Figure out how can you fit a function with unknown parameters to your measurements.  Making some fake data in Matlab to test out your procedure may help.
4. You need to be sure that your measurements capture evidence of multipath in the tank, and achieving that will require careful spacing of your measurements. Figure out how closely you need to space your measurements in order to observe multipath.

Then carry out measurements in the tank

1. Attach a tank microphone to your amplifier from @sec-interface, and attach the amplifier output to an oscilloscope channel.
2. Use your microphone, assisted by the oscilloscope FFT, to figure out which beacon corresponds to which frequency. The orientation of your microphone relative to the beacon can affect your measurement, so be sure to align the receive mic with the transmit speaker.
3. For each beacon, measure the received Voltage magnitude as you move your microphone away from the beacon.  As a reminder, the spacing of your measurements is very important for spotting an important real-world phenomenon called multipath, and you'll need to rely on your earlier calculations to figure out that spacing.
4. Make three plots, one for each beacon, showing the analytical model of beacon power on the same axes as your measured points.  

:::{.callout-warning}
We are using both benchtop electronics and water in this lab, and the two don't mix, so BE EXTREMELY CAREFUL when putting anything in the water, removing anything from the water or mounting anything near the water. Instructors will stop your experiments if they think they pose a water hazard to equipment.
:::

:::{.callout-note}
Though this section shows that it's possible to measure a robot's position using power decay from a beacon, it's much more common and reliable to measure a robot's position using the time-of-flight of an acoustic pulse.  See @sec-tof for more details on how to use time-of-flight measurements for sounding.
:::

## Sampling Audio with a Teensy

This section requires that you use the Teensy sampling rigs (shown in @fig-sampling-rig) that have been set up in the tank room. The rigs consist of an amplifier with an offset attached to an E80 motherboard that samples the amplifier output.  We provide software, [E80_Lab05_Teensy_Rig.m](https://github.com/HMC-E80/E80-SP2023/blob/main/MATLAB/E80_Lab_05_Teensy_Rig.m) and [E80_Lab05_Teensy_Rig.ino](https://github.com/HMC-E80/E80-SP2023/blob/main/E80_Lab_05_Teensy_Rig/E80_Lab_05_Teensy_Rig.ino) (which is already running on the rig), that allows you to adjust the sample rate of the Teensy, and we're going to use that power to explore how sample rate affects real world data samples. 

![Teensy sampling rig](img/teensy_sampling_rig.png){#fig-sampling-rig}

1. Connect a tank microphone to a Teensy sampling rig, 
2. Connect the rig to your computer with a micro USB cable
3. Use the [E80_Lab05_Teensy_Rig.m](https://github.com/HMC-E80/E80-SP2023/blob/main/MATLAB/E80_Lab_05_Teensy_Rig.m) software to measure vectors of sample data with sample rates of 10 kS/s and 100 kS/s (kilosamples per second).
    1. Edit the Matlab script to set the COM port 
    2. Edit the Matlab script to set the sampling frequency
    3. Run the script
    4. Your sampled data will be in the `micSignal` variable, so save that variable under another name. Note the sampling frequency and the number of samples.
    5. Repeat steps 2, 3 and 4 for the second sampling frequency.
4. Plot the magnitude of FFTs of the 10 kS/s and 100 kS/s sampled data. Describe any differences between the resulting graphs and explain what causes the differences.
5. Plot the first 100 points of the time data for the 10 kS/s and 100 kS/s signals. Pay attention to the x axis of the signals.  Describe any differences in the measured data and explain why they are there.
6. What is the minimum sampling rate you should use to measure signals in the tank? Prove it by sampling data at that frequency and presenting an FFT of that data.

:::{.callout-note}
Be sure to return electret microphones, power amplifier boards and speakers to the electronics table.  
:::

:::{.callout-note}
In this section, as always, we connect to your Teensy pins through the E80 motherboard, which has protection circuits designed to prevent damage to the Teensy.  
:::

## Extra Credit: Distance Measurement Based on Time-of-Flight Measurements {#sec-tof}

Another common acoustic measurement is time-of-flight (ToF) range finding. ToF measurement relies on sending out a specially designed acoustic pulse from a speaker and measuring how long it takes for it to reach a microphone. Often the microphone is measuring reflections of your initial speaker pulse (eg. on a sounding vessel), but we'll get started by just sending our speaker pulse straight to our microphone.  

You need to be able to carefully control the signals being sent from your speaker in this section, and you need to be particularly careful to avoid broadcasting at any of the beacon frequencies. Tou will send a burst of sine waves, i.e.: a small number of sine wave cycles, at a frequency higher than 14 kHz. We can accomplish this by using internally triggered burst modulation, an advanced feature of the old signal generators (the [HP/Agilent 33120A](http://www.eng.hmc.edu/NewE80/PDFs/HP33120A_UserGuide.pdf)). This function is not available on the function generators in your oscilloscope. You can control burst mode by pressing the series of keys shown below. Read the manual for clarification on how these key presses work.

* Turn burst modulation mode on: Shift + the ramp/burst button / The text 'burst' will be highlighted at the top of the screen.
* Turn burst modulation mode off: Shift + the ramp/burst button / The text 'burst' will no longer be highlighted at the top of the screen.
* Turn manual triggering on and internal triggering off: Shift + the TRIG button / The text 'trig' will be highlighted at the top of the screen
* Turn manual triggering off and internal triggering on: Shift + the TRIG button / The text 'trig' will no longer be highlighted at the top of the screen
* Change the number of cycles sent out in each burst or the burst repetition rate: 
* Shift + Enter / Screen says "A: Mod Menu,"
* v      / Screen says "AM Shape,"
* >      / Screen says "AM Source,"
* >      / Screen says "FM Shape,"
* >      / Screen says "Burst CNT, "
* v      / Screen says some number."         OR         > / "Burst Rate," and then V / "some number."
* Edit the number you see and press enter to save the setting.

You will be using Dayton [DAEX25W-8](https://drive.google.com/open?id=1Jrxe618k8KY_t4pc5sp_lyUTn6-bCDne) Audio Exciters as speakers to convert voltage signals into acoustic signals. These speakers, like most speakers, have very low input impedance. What is their impedance? Calculate the maximum power you could drive into them using one of the old [HP/Agilent 33120A](http://www.eng.hmc.edu/NewE80/PDFs/HP33120A_UserGuide.pdf) signal generators. You need to account for the output impedance of the signal generator in this calculation. Audio amplifiers, like the [LM384](http://www.ti.com/lit/ds/symlink/lm384.pdf), help us to bypass this problem. They are designed to drive large amounts of power through speakers. What is the maximum average power an LM384 can drive into a DAEX25W-8?  

We have created a power amplifier board containing an LM384 to allow you to drive your speakers. Follow [these instructions](https://docs.google.com/document/d/1qWEORVg34CGcCEvArqbF1Zvz5JboWvJmLXS1v33wLos/edit?usp=sharing) to use the driver board. You only have access to one power supply in the tank room, so you'll need to power your microphone amplifier off the same rails as the LM384 amplifier board. Be careful not to provide too much voltage to the microphone amplifier.

You are measuring in a noisy environment (beacons, other teams, etc), so measuring your received signal will also depend on carefully timing the snapshot that your oscilloscope takes. By gathering data that is synchronized with the signal you are sending and averaging over many samples, you can cancel out signals that are not at the same frequency as the burst repetition rate of your signal. This is called coherent averaging. Set this up using the following steps:



* Use a second oscilloscope channel to probe the output of your function generator (or attach the trigger output of your function generator to your scope's trigger input) 
* Trigger your oscilloscope on the channel attached to the output of the function generator (or on the trigger input)
* Set your oscilloscope to normal mode acquisition (so that it will only capture a new screen of data when it receives a trigger) and adjust the horizontal position of your oscilloscope trigger so that you don't waste samples recording data before you send out a burst.   
* Turn on averaging on your oscilloscope using the Acquisition/Mode button. 

Affix your speaker to the wall and move your microphone to different distances away from it. Measure the time of flight to your receiver to create a calibration curve of distance vs. measured time of flight. Include an ideal analytical calculation of time-of-flight vs. distance on your calibration curve and compare it to your data. How long should a sound wave take to propagate from your speaker to the other side of the pool? How long for a round trip? A schematic of the test tank can be found [here](https://drive.google.com/file/d/0BwiB3SVueuOpY182bENDQmwwWU0/view?usp=sharing&resourcekey=0-_8rrYHgHU7tybj0cLFDteA). If you're feeling particularly bold, you can try putting your speaker next to your microphone to measure a reflection off of something.

You may refer to [this picture](https://drive.google.com/file/d/1oBBkm4o01ZZupTHBEN3McYiGxioi8_sz/view?usp=sharing) of an example range finding setup. As mentioned in the introduction, it is extremely important that your electronics and the tank water are not mixed. [Use tape to hold electronics down](https://drive.google.com/file/d/1MLQDMKdA0Lh1eyxujIAGwgewM1vTXVeF/view?usp=sharing) so they can't fall into the tank, and [keep bench top equipment as far from the tank edge as possible](https://drive.google.com/file/d/1MLQDMKdA0Lh1eyxujIAGwgewM1vTXVeF/view?usp=sharing). Always dry your test apparatus with a towel as you remove it from the water and be mindful of nearby electrical setups. This is an opportunity for some careful mechanical design: a little PVC can go a long way towards making your setup work well. Include one to three pictures of your experimental setup on the table and pool edge in your submission sheet. These pictures will be graded on safety and quality of construction. 


## Extra Credit: Velocity Detection from Doppler Shift

It is possible to use more complex modulation of the signal that your speaker emits to learn more about your robot. In this section you will use a frequency modulated sine wave to measure the velocity of your robot by leveraging the Doppler effect. This type of measurement is called a frequency modulated continuous wave (FMCW) measurement because, unlike your time of flight experiment, you are not sending out bursts of signal.

Use the signal generator to generate a triangle frequency modulated FMCW signal to drive into your speaker.  Instructions to do so can be found in the manual. Set the frequency deviation to fill your channel, the modulation frequency to 10 Hz, and the modulation shape to be a triangle.

You will need a "true" measurement of velocity to compare against your Doppler measured velocity. We will record video of your robot and analyze it with frame tracking software. [VLC](http://www.videolan.org/vlc/index.html) works well as capture software, and we recommend [tracker](http://physlets.org/tracker/) for tracking software (though some students have used [video-physics](https://www.vernier.com/products/software/video-physics)). Attach one of the USB web cameras to your computer and build a PVC frame so that it has a top-down view of your robot.  Make sure a length reference like a meter stick is visible in the image that you capture. Attach a brightly colored piece of pool noodle to your robot so that it is visible above the water. This will enable you to use auto tracking features in the video analysis software. Test your image capture / velocity measurement system before deploying your robot to be sure that it is working.

Use a claw hand or a piece of PVC to move your receiver through the water while driving the transmitter with your FMCW wave and recording the received audio. Also record video of the test using your image tracking system. It's easiest to carry out your recordings by taking a very long acquisition on the oscilloscope which you start manually by pressing the force trigger button.

Use the instructions in [this](https://drive.google.com/file/d/0B7Ols9Km9Pa1Z205RDZ6SDczck0/view?usp=sharing) document to process your received audio and extract the velocity as a function of time from your received FMCW. Bear in mind that you need to isolate your velocity signal before doing any signal processing, so don't be afraid to take an FFT and filter out other channels before processing your data. Also extract velocity from your recorded video. Generate a plot comparing your Doppler velocity against the velocity measured using your image capture system.



## Extra Credit: Self-Powered Velocity Measurements

Affix your speaker and microphone to your AUV and take velocity measurements while it is driving under its own power as in lab 1. Compare logged accelerometer data, image capture system data and Doppler data.


## A Note for the Project: 

You won't be able to use our audio amplifier boards during the final project, but it's pretty easy to whip up your own LM384 on your protoboard. You can find the reference design for a typical 5 W amplifier in the LM384 datasheet. This reference design involves using a [potentiometer](http://www.resistorguide.com/potentiometer/) for volume control, which you can probably replace with a fixed divider or omit depending on your design. Place an extra 4.7 µF bypass capacitor on the supply rails (not the bypass pin) in addition to your normal bypassing. Your amplifier will be unstable without this extra capacitor, so it may be educational to remove the capacitor and observe the amplifier output to understand exactly what bypassing does for you.

Notice this design has a capacitor in series with the speaker. This is done for two reasons: speakers can be damaged by DC current, and the audio response of the speaker is linked to relatively high frequency oscillations. The capacitor lets high frequencies through and stops DC. This technique of driving an output through a series capacitor is called AC coupling. You'll probably drive the input from a Teensy, but this input likes to have zero centered input signals, so we recommend AC coupling the input too.
